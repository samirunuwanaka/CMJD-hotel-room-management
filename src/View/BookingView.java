/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import DAO.CRUD;
import DBCreator.entity.RoomPackages;
import Dto.RoomPackageDto;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JComboBox;
import javax.swing.JSpinner;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class BookingView extends javax.swing.JFrame {

    /**
     * Creates new form BookingView
     */
    public BookingView() throws SQLException {
        loadView();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRoomPackages = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDiningPackages = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        tblRoomFloor = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txtCustWelcome = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblPreviousBookings = new javax.swing.JTable();
        btnReset = new javax.swing.JToggleButton();
        btnSave = new javax.swing.JToggleButton();
        btnDelete = new javax.swing.JToggleButton();
        jLabel4 = new javax.swing.JLabel();
        txtRoomNo = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtRoomPackage = new javax.swing.JComboBox<>();
        txtDiningPackage = new javax.swing.JComboBox<>();
        txtNoOfDays = new javax.swing.JSpinner();
        txtNoOfPerson = new javax.swing.JSpinner();
        txtMonth = new javax.swing.JComboBox<>();
        txtDay = new javax.swing.JComboBox<>();
        txtYear = new javax.swing.JComboBox<>();
        btnRoomSearch = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 255, 102));

        tblRoomPackages.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        tblRoomPackages.setForeground(new java.awt.Color(0, 51, 153));
        tblRoomPackages.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblRoomPackages);

        tblDiningPackages.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        tblDiningPackages.setForeground(new java.awt.Color(0, 102, 153));
        tblDiningPackages.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblDiningPackages);

        jLabel1.setForeground(new java.awt.Color(0, 102, 204));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("RoomPackages");

        jLabel2.setForeground(new java.awt.Color(0, 102, 204));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Dinning Packages");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 18, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(153, 255, 153));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        tblRoomFloor.setViewportView(jTable1);

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 3, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 204));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Book Your Order Here");

        txtCustWelcome.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        txtCustWelcome.setForeground(new java.awt.Color(102, 0, 102));
        txtCustWelcome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        tblPreviousBookings.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPreviousBookings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPreviousBookingsMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblPreviousBookings);

        btnReset.setText("Reset Fields");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setText("Refund");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Room No");

        txtRoomNo.setBackground(new java.awt.Color(0, 51, 255));

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Room Package");

        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Dinning Package");

        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Date");

        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("No Of Days");

        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("No Of Person For The Room");

        txtRoomPackage.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        txtRoomPackage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRoomPackageActionPerformed(evt);
            }
        });

        txtDiningPackage.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        txtDiningPackage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiningPackageActionPerformed(evt);
            }
        });

        txtNoOfDays.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtNoOfDaysPropertyChange(evt);
            }
        });

        txtMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        txtMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMonthActionPerformed(evt);
            }
        });

        txtDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        txtDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDayActionPerformed(evt);
            }
        });

        txtYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        txtYear.setSelectedItem("Year");
        txtYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtYearActionPerformed(evt);
            }
        });

        btnRoomSearch.setText("Search Room");
        btnRoomSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRoomSearchActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 204));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Bookings that you haven't checked in");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtCustWelcome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(150, 150, 150))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(tblRoomFloor, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtRoomPackage, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtDiningPackage, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(txtNoOfDays, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btnRoomSearch))))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtDay, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSave))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtNoOfPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtRoomNo, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCustWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tblRoomFloor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnDelete, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtRoomPackage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addComponent(txtRoomNo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDiningPackage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNoOfDays, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRoomSearch))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNoOfPerson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnReset)
                            .addComponent(btnSave)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        txtRoomNo.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
        btnSave.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        loadView();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnResetActionPerformed

    private void txtRoomPackageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRoomPackageActionPerformed
        try {
            tblRoomNo();
            newData();
        } catch (Exception e) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRoomPackageActionPerformed

    private void txtDiningPackageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiningPackageActionPerformed
        try {
            newData();
            tblRoomNo();
        } catch (Exception e) {
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtDiningPackageActionPerformed

    private void txtYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtYearActionPerformed
        try {
            newData();
            setDaysForJCombo();
            tblRoomNo();
        } catch (Exception e) {
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtYearActionPerformed

    private void txtMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMonthActionPerformed
        try {
            newData();
            setDaysForJCombo();
            tblRoomNo();
        } catch (Exception e) {
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtMonthActionPerformed

    private void txtDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDayActionPerformed
        try {
            newData();
            tblRoomNo();
        } catch (Exception e) {
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtDayActionPerformed

    private void txtNoOfDaysPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtNoOfDaysPropertyChange
        try {
            tblRoomNo();
            // TODO add your handling code here:
        } catch (SQLException ex) {
            Logger.getLogger(BookingView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(BookingView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtNoOfDaysPropertyChange

    private void btnRoomSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRoomSearchActionPerformed
        try {
            tblRoomNo();
            // TODO add your handling code here:
        } catch (SQLException ex) {
            Logger.getLogger(BookingView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(BookingView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRoomSearchActionPerformed

    private void tblPreviousBookingsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPreviousBookingsMouseClicked
        try {
            btnDelete.setEnabled(true);
            btnSave.setEnabled(false);
            txtRoomPackage.setSelectedItem(tblPreviousBookings.getValueAt(tblPreviousBookings.getSelectedRow(), 0));
            txtDiningPackage.setSelectedItem(tblPreviousBookings.getValueAt(tblPreviousBookings.getSelectedRow(), 1));
            setDateToPreviousBooking(tblPreviousBookings.getValueAt(tblPreviousBookings.getSelectedRow(), 3).toString());
            txtRoomNo.setText(tblPreviousBookings.getValueAt(tblPreviousBookings.getSelectedRow(), 4).toString());
            txtNoOfDays.setVisible(false);
            txtNoOfPerson.setVisible(false);
            // TODO add your handling code here:
        } catch (ParseException ex) {
            Logger.getLogger(BookingView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tblPreviousBookingsMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            if (Controller.BookingView.tryDelete(txtRoomNo.getText(),
                    txtYear.getSelectedItem() + "-" + ((txtMonth.getSelectedIndex() + 1) < 10 ? ("0" + txtMonth.getSelectedIndex() + 1) : (txtMonth.getSelectedIndex() + 1)) + "-" + ((txtDay.getSelectedIndex() + 1) < 10 ? ("0" + txtDay.getSelectedIndex() + 1) : (txtDay.getSelectedIndex() + 1))
            )) {
                JOptionPane.showMessageDialog(this, "Successfully refund");
            } else {
                JOptionPane.showMessageDialog(this, "You may have purchased before one day");
            }
        } catch (Exception e) {
        }

// TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
            if (Controller.BookingView.saveBooking(
                    Dto.LogInDto.getID(),
                    txtRoomPackage.getSelectedItem().toString(),
                    txtDiningPackage.getSelectedItem().toString(),
                    txtRoomNo.getText(),
                    Integer.parseInt(txtNoOfPerson.getValue().toString()),
                    Integer.parseInt(txtNoOfDays.getValue().toString()),
                    txtYear.getSelectedItem() + "-" + ((txtMonth.getSelectedIndex() + 1) < 10 ? ("0" + txtMonth.getSelectedIndex() + 1) : (txtMonth.getSelectedIndex() + 1)) + "-" + ((txtDay.getSelectedIndex() + 1) < 10 ? ("0" + txtDay.getSelectedIndex() + 1) : (txtDay.getSelectedIndex() + 1))
            )) {
                JOptionPane.showMessageDialog(this, "Sucessfully Booked yours");
            } else {
                JOptionPane.showMessageDialog(this, "Sorry We Will try Better for yours");
            }
// TODO add your handling code here:
        } catch (SQLException ex) {
            Logger.getLogger(BookingView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookingView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookingView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookingView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookingView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new BookingView().setVisible(true);
                } catch (SQLException ex) {
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnDelete;
    private javax.swing.JToggleButton btnReset;
    private javax.swing.JButton btnRoomSearch;
    private javax.swing.JToggleButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tblDiningPackages;
    private javax.swing.JTable tblPreviousBookings;
    private javax.swing.JScrollPane tblRoomFloor;
    private javax.swing.JTable tblRoomPackages;
    private javax.swing.JLabel txtCustWelcome;
    private javax.swing.JComboBox<String> txtDay;
    private javax.swing.JComboBox<String> txtDiningPackage;
    private javax.swing.JComboBox<String> txtMonth;
    private javax.swing.JSpinner txtNoOfDays;
    private javax.swing.JSpinner txtNoOfPerson;
    private javax.swing.JLabel txtRoomNo;
    private javax.swing.JComboBox<String> txtRoomPackage;
    private javax.swing.JComboBox<String> txtYear;
    // End of variables declaration//GEN-END:variables

    private void loadRoomPackages() throws SQLException {
        String[] roomPackages = new String[0];
        ResultSet resultSet = CRUD.getFromDataBase("Room Packages", "Room Type", "");
        txtRoomPackage = new JComboBox(getObjectForCombo(resultSet, roomPackages));

    }

    private static String[] setMonthsForJCombo() {
        String[] months = {"January", "February", "March", "April", "May", "June", "July", "August", "Sepethember", "Octomber", "November", "December"};
        return months;
    }

    private void setDaysForJCombo() {
        if (txtMonth.getSelectedItem().toString().equalsIgnoreCase("February")) {
            if (Integer.parseInt(txtYear.getSelectedItem().toString()) % 4 == 0) {
                String[] days = {"1",
                    "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29"};
                jComboListChange(txtDay, days);
            } else {
                String[] days = {"1",
                    "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28"};
                jComboListChange(txtDay, days);
            }
        } else {
            String[] days = {"1",
                "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"};
            jComboListChange(txtDay, days);
        }

    }

    private static String[] setYearsForJCombo() {
        String[] years = {"2024", "2025", "2026", "2027"};
        return years;
    }

    private void jComboListChange(JComboBox oldComboBox, String[] newItems) {
        oldComboBox.setModel(new JComboBox<>(newItems).getModel());
    }

    private void loadTableColums() {
        try {
            String[] roomPackagesDtmcolumns = {"Room Package", "Charge"};
            DefaultTableModel roomPackagesDtm = new DefaultTableModel(roomPackagesDtmcolumns, 0) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }

            };
            tblRoomPackages.setModel(roomPackagesDtm);

            String[] dinningPackageDtmcolumns = {"Dinning Package", "Charge"};
            DefaultTableModel dinningPackageDtm = new DefaultTableModel(dinningPackageDtmcolumns, 0) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }

            };
            tblDiningPackages.setModel(dinningPackageDtm);

            String[] roomNoDtmcolumns = {"Room No", "Floor No"};
            DefaultTableModel roomNoDtm = new DefaultTableModel(roomNoDtmcolumns, 0) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }

            };
            jTable1.setModel(roomNoDtm);

            String[] previousBookingColumn = {"Room Package", "Dinning Package", "Date", "Room No"};
            DefaultTableModel previousBookingDtm = new DefaultTableModel(previousBookingColumn, 0) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }

            };
            tblPreviousBookings.setModel(previousBookingDtm);

        } catch (Exception ex) {
            Logger.getLogger(BookingView.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error at loading Data");
        }
    }

    private void tblRoomDinningCharges() {
        try {
            RoomPackageDto[] roomPackageDtos = Controller.BookingView.getAllCharges();
            for (RoomPackageDto Dto : roomPackageDtos) {
                Object[] roomPackagesRow = {
                    Dto.getRoomType(),
                    Dto.getRoomChargeh()
                };
                Object[] dinningPackageRow = {
                    Dto.getDinningPackage(),
                    Dto.getDinningCharge()
                };
                DefaultTableModel dtm = (DefaultTableModel) tblRoomPackages.getModel();
                dtm.addRow(roomPackagesRow);
                dtm = (DefaultTableModel) tblDiningPackages.getModel();
                dtm.addRow(dinningPackageRow);
            }
        } catch (Exception e) {
            Logger.getLogger(BookingView.class.getName()).log(Level.SEVERE, null, e);
            JOptionPane.showMessageDialog(this, "Error at loading Data");
        }
    }

    private void loadDinningPackages() throws SQLException {
        String[] dinningPackages = new String[0];
        ResultSet resultSet = CRUD.getFromDataBase("Dinning Packages", "Dinning Package", "");
        txtRoomPackage = new JComboBox(getObjectForCombo(resultSet, dinningPackages));
    }

    private static String[] getObjectForCombo(ResultSet resultSet, String[] comboString) throws SQLException {
        while (resultSet.next()) {
            String[] tempRoomPackages = new String[comboString.length + 1];
            int i = 0;
            for (String room : comboString) {
                tempRoomPackages[i] = room;
                i++;
            }
            comboString = tempRoomPackages;
        }
        return comboString;
    }

    private void loadView() {
        try {
            initComponents();
            txtNoOfDays.setModel((SpinnerModel) new SpinnerNumberModel(1, 1, 6, 1));
            txtNoOfPerson.setModel((SpinnerModel) new SpinnerNumberModel(1, 1, 6, 1));
            btnDelete.setVisible(false);
            btnSave.setVisible(false);
            try {
                jComboListChange(txtYear, setYearsForJCombo());
                jComboListChange(txtMonth, setMonthsForJCombo());
                setDaysForJCombo();
            } catch (Exception e) {
            }
            loadTableColums();
            loadRoomPackages();
            try {
                txtCustWelcome.setText("Welcome" + (CRUD.getFromDataBase("Customer Data", "Name", "Cust ID = ", Dto.LogInDto.getID())).getString("Name"));
            } catch (Exception e) {
            }
            loadDinningPackages();
            tblRoomDinningCharges();
            try {
                tblRoomNo();
                Controller.BookingView.tblPrevious(tblPreviousBookings);
            } catch (Exception e) {
            }
        } catch (Exception e) {
        }
//        txtCustWelcome.setText(CRUD.getFromDataBase("Customer Data", "Name", "WHERE Cust ID = ",Dto.LogInDto.getID()).getString("Name"));
    }

    private void tblRoomNo() throws SQLException, ParseException {
        String[] columns = Controller.BookingView.tblRoomNo(txtYear.getSelectedItem().toString(),
                txtMonth.getSelectedItem().toString(),
                txtDay.getSelectedItem().toString(),
                txtNoOfDays.getValue().toString(),
                txtRoomPackage.getSelectedItem().toString()
        );
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.addRow(columns);
    }

    private void setDateToPreviousBooking(String toString) throws ParseException {
        Calendar cal = Calendar.getInstance();
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        cal.setTime(formatter.parse(toString));
        txtDay.setSelectedItem(cal.DATE);
        txtMonth.setSelectedIndex(cal.get(Calendar.MONTH) + 1);
        txtYear.setSelectedItem(cal.YEAR);
    }

    private void newData() {
        btnSave.setVisible(true);
        txtNoOfDays.setVisible(true);
        txtNoOfPerson.setVisible(true);
    }
}
